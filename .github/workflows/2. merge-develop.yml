name: Criar branch release e PR develop → release

on:
  push:
    branches:
      - develop

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checar repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"

      - name: Calcular próxima versão release
        id: next_version
        run: |
          # Buscar branches remotas release/*
          git fetch --prune origin '+refs/heads/release/*:refs/remotes/origin/release/*'

          # Contar quantas branches release existem
          count=$(git branch -r | grep 'origin/release/' | wc -l)

          # Incrementar
          next=$((count + 1))

          echo "branches release existentes: $count"
          echo "próxima versão: $next"

          echo "RELEASE_VERSION=$next" >> $GITHUB_ENV

      - name: Criar branch release a partir da develop
        run: |
          git fetch origin develop
          git checkout -b release/${{ env.RELEASE_VERSION }} origin/develop
          git push origin release/${{ env.RELEASE_VERSION }}

      - name: Criar PR develop → release
        id: create_pr
        run: |
          PR_URL=$(gh pr create \
            --title "Release ${{ env.RELEASE_VERSION }}" \
            --body "PR da develop para release" \
            --base release/${{ env.RELEASE_VERSION }} \
            --head develop \
            --label "release" \
            --json url --jq .url)

          echo "PR_URL=$PR_URL" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Aguardar aprovação da PR
        run: |
          echo "Aguardando aprovação da PR: $PR_URL"
          PR_NUMBER=$(gh pr view "$PR_URL" --json number --jq .number)
